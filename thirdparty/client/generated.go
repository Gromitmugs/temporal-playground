// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package client

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// ErrorCreateResponse is returned by ErrorCreate on success.
type ErrorCreateResponse struct {
	ErrorCreate string `json:"errorCreate"`
}

// GetErrorCreate returns ErrorCreateResponse.ErrorCreate, and is useful for accessing the field via an interface.
func (v *ErrorCreateResponse) GetErrorCreate() string { return v.ErrorCreate }

// MessageCreateMessageCreateMessage includes the requested fields of the GraphQL type Message.
type MessageCreateMessageCreateMessage struct {
	Id      int    `json:"id"`
	Content string `json:"content"`
}

// GetId returns MessageCreateMessageCreateMessage.Id, and is useful for accessing the field via an interface.
func (v *MessageCreateMessageCreateMessage) GetId() int { return v.Id }

// GetContent returns MessageCreateMessageCreateMessage.Content, and is useful for accessing the field via an interface.
func (v *MessageCreateMessageCreateMessage) GetContent() string { return v.Content }

// MessageCreateResponse is returned by MessageCreate on success.
type MessageCreateResponse struct {
	MessageCreate MessageCreateMessageCreateMessage `json:"messageCreate"`
}

// GetMessageCreate returns MessageCreateResponse.MessageCreate, and is useful for accessing the field via an interface.
func (v *MessageCreateResponse) GetMessageCreate() MessageCreateMessageCreateMessage {
	return v.MessageCreate
}

// __ErrorCreateInput is used internally by genqlient
type __ErrorCreateInput struct {
	ErrMsg string `json:"errMsg"`
}

// GetErrMsg returns __ErrorCreateInput.ErrMsg, and is useful for accessing the field via an interface.
func (v *__ErrorCreateInput) GetErrMsg() string { return v.ErrMsg }

// __MessageCreateInput is used internally by genqlient
type __MessageCreateInput struct {
	Content string `json:"content"`
}

// GetContent returns __MessageCreateInput.Content, and is useful for accessing the field via an interface.
func (v *__MessageCreateInput) GetContent() string { return v.Content }

// The query or mutation executed by ErrorCreate.
const ErrorCreate_Operation = `
mutation ErrorCreate ($errMsg: String!) {
	errorCreate(errMsg: $errMsg)
}
`

func ErrorCreate(
	ctx context.Context,
	client graphql.Client,
	errMsg string,
) (*ErrorCreateResponse, error) {
	req := &graphql.Request{
		OpName: "ErrorCreate",
		Query:  ErrorCreate_Operation,
		Variables: &__ErrorCreateInput{
			ErrMsg: errMsg,
		},
	}
	var err error

	var data ErrorCreateResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by MessageCreate.
const MessageCreate_Operation = `
mutation MessageCreate ($content: String!) {
	messageCreate(content: $content) {
		id
		content
	}
}
`

func MessageCreate(
	ctx context.Context,
	client graphql.Client,
	content string,
) (*MessageCreateResponse, error) {
	req := &graphql.Request{
		OpName: "MessageCreate",
		Query:  MessageCreate_Operation,
		Variables: &__MessageCreateInput{
			Content: content,
		},
	}
	var err error

	var data MessageCreateResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
